generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String             @id
  name              String?
  avatar_url        String?
  bio               String?
  birthday          DateTime?
  episodes          Episode[]
  following         Follow[]           @relation("Following")
  followedBy        Follow[]           @relation("FollowedBy")
  likes             Like[]
  diagnosisHistories DiagnosisHistory[]
}

model Episode {
  id         String   @id @default(uuid())
  content    String   @db.VarChar(200)
  created_at DateTime @default(now())
  user_id    String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  likes      Like[]
  category   String   @default("日常生活")
  @@index([created_at])
}

model Like {
  created_at DateTime @default(now())
  user_id    String
  episode_id String
  episode    Episode  @relation(fields: [episode_id], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([user_id, episode_id])
  @@index([created_at, episode_id])
}

model Follow {
  createdAt   DateTime @default(now())
  followerId  String
  followingId String
  follower    User     @relation("Following", fields: [followerId], references: [id], onDelete: Cascade)
  following   User     @relation("FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)

  @@id([followerId, followingId])
}

model DiagnosisHistory {
  id         String   @id @default(uuid())
  user_id    String
  episode    String   @db.Text
  diagnosis  String   @db.Text
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id, created_at])
}
